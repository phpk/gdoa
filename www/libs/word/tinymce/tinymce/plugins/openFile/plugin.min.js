
const openfileFunc = function (editor, url) {
  let pluginName = '打开';

  const wordLoader = (event) => {
    let arrayBuffer = event.target.result;
    //console.log(res)
    if (!arrayBuffer) return;
    let options = {
      styleMap: [
        "p[style-name='Intro'] => p.intro",
        "p[style-name='List Bullet'] => ul > li:fresh",
        "b => em"
      ],
      includeDefaultStyleMap: true,
      convertImage: mammoth.images.imgElement(function (image) {
        return image.read("base64").then(function (imageBuffer) {
          return {
            src: "data:" + image.contentType + ";base64," + imageBuffer
          };
        });
      })
    };

    mammoth.convertToHtml({ arrayBuffer, options }).then(val => {
      console.log(val)
      editor.setContent(val.value)
    })
  }
  const mdLoader = (event) => {
    if (event.target.result) {
      let val = marked.parse(event.target.result);
      console.log(val)
      editor.setContent(val)
    }
  }
  const txtLoader = (event) => {
    if (event.target.result) {
      editor.setContent(event.target.result)
    }
  }
  const rtfLoader = (event) => {
    let res = event.target.result;
    if (!res) return;
    //console.log(window)
    let parsedRtf = rtf2html.parse(res);
    //console.log(parsedRtf)
    let opts = {
      margins: [0, 0, 0, 0],
      vertAlign: 'top'
    };
    let output = rtfFormat(parsedRtf, opts);

    editor.setContent(output)
  }
  const checkType = (files, type) => {
    let tmparr = files.name.split(".");
    let fileType = tmparr[tmparr.length - 1].toLowerCase();
    if (!fileType) return false;
    if (type == 'doc') {
      //console.log(fileType)
      if (fileType == 'doc' || fileType == 'docx') {
        return true;
      } else {
        return false;
      }
    } else {
      if (type != fileType) return false;
    }
    return true;
  }
  let loadLocalFile = (type) => {
    let input = document.createElement("input");
    input.type = "file";
    input.click();

    input.onchange = () => {
      let files = input.files[0];
      let isOk = checkType(files, type);
      if (!isOk) {
        layer.msg('打开文件格式错误', { icon: 2 });
        return false;
      }
      const fileReader = new FileReader();
      if (type == 'doc') {
        fileReader.onload = wordLoader;
        fileReader.readAsArrayBuffer(files);
      }
      else if (type == 'md') {
        fileReader.onload = mdLoader;
        fileReader.readAsText(files);
      }
      else if (type == 'txt' || type == 'html') {
        fileReader.onload = txtLoader;
        fileReader.readAsText(files);
      }
      else if (type == 'rtf') {
        fileReader.onload = rtfLoader;
        fileReader.readAsText(files);
      }


    }
  }
  let svgStr = `<svg t="1640280779711" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3202" width="20" height="20"><path d="M275.84 160H124.192l1.824 580.096a32 32 0 0 1-64 0L60.16 160a64 64 0 0 1 64-64h177.92l97.28 96h498.272a32 32 0 1 1 0 64H373.152l-97.28-96z" p-id="3203"></path><path d="M127.52 735.616a32 32 0 0 1-63.04-10.944l54.624-314.144C127.904 359.936 174.784 320 225.76 320h668.864c55.36 0 93.92 46.72 84.384 101.472l-72.32 416C897.824 888.064 850.976 928 800 928H160a32 32 0 0 1 0-64h640c19.712 0 40.096-17.376 43.616-37.472l72.32-416c2.784-15.904-5.984-26.528-21.312-26.528H225.76c-19.68 0-40.096 17.376-43.584 37.472l-54.656 314.144z" p-id="3204"></path></svg>`;

  editor.ui.registry.getAll().icons.openFile || editor.ui.registry.addIcon('openFile', svgStr);


  editor.ui.registry.addNestedMenuItem('openFile', {
    icon: 'openFile',
    text: '打开',
    getSubmenuItems: function () {
      return [
        {
          text: 'word文件',
          type: 'menuitem',
          onAction: function () {
            loadLocalFile('doc')
          }
        },
        {
          text: 'pdf文件',
          type: 'menuitem',
          onAction: function () {
            goFdf(val => {
              editor.setContent(val)
            })
          }
        },
        {
          text: 'md文件',
          type: 'menuitem',
          onAction: function () {
            loadLocalFile('md')
          }
        },
        {
          text: 'txt文件',
          type: 'menuitem',
          onAction: function () {
            console.log('text文件');
            loadLocalFile('txt')
          }
        },
        {
          text: 'rft文件',
          type: 'menuitem',
          onAction: function () {
            console.log('RTF文件');
            loadLocalFile('rtf')
          }
        },
        {
          text: 'html文件',
          type: 'menuitem',
          onAction: function () {
            console.log('html文件');
            loadLocalFile('html')
          }
        },
      ]
    }
  });
  return {
    getMetadata: function () {
      return {
        name: pluginName,
        url: "https://godo.im",
      };
    }
  };
}
tinymce.PluginManager.add('openFile', openfileFunc);
