tinymce.PluginManager.add('saveFile', function (editor, url) {
  let pluginName = '另存为';
  function convertImagesToBase64() {
    contentDocument = tinymce.get('content').getDoc();
    var regularImages = contentDocument.querySelectorAll("img");
    var canvas = document.createElement('canvas');
    var ctx = canvas.getContext('2d');
    [].forEach.call(regularImages, function (imgElement) {
      // preparing canvas for drawing
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      canvas.width = imgElement.width;
      canvas.height = imgElement.height;

      ctx.drawImage(imgElement, 0, 0);
      // by default toDataURL() produces png image, but you can also export to jpeg
      // checkout function's documentation for more details
      var dataURL = canvas.toDataURL();
      imgElement.setAttribute('src', dataURL);
    })
    canvas.remove();
  }
  const saveDocx = (title) => {
    //let content = editor.getContent()
    //var converted = htmlDocx.asBlob(content);
    //saveAs(converted, title + '.docx');
    convertImagesToBase64();
    let contentDocument = tinymce.get('content').getDoc();
    let content = '<!DOCTYPE html>' + contentDocument.documentElement.outerHTML;
    let converted = htmlDocx.asBlob(content);
    saveAs(converted, title + '.docx');
  }
  const savePdf = (title) => {
    if (navigator.userAgent.indexOf("Firefox") > -1) {
      layer.msg('请改用谷歌浏览器，暂不支持火狐', { icon: 2 });
      return;
    }
    let content = editor.getContent()
    var element = document.createElement('div');
    element.innerHTML = content;
    // Define optional configuration
    layer.load(2, { time: 3 * 1000 });
    html2pdf()
      .set({ filename: title + '.pdf' })
      .from(content)
      .save()

  }
  const saveText = (title) => {
    let val = editor.getContent({ format: 'text' });
    var blob = new Blob([val], {
      type: "text/plain;charset=utf-8"
    });
    //console.log(title)
    saveAs(blob, title + ".txt");
  }
  const saveHtml = (title) => {
    let val = editor.getContent();
    var blob = new Blob([val], {
      type: "text/html;charset=utf-8"
    });
    //console.log(title)
    saveAs(blob, title + ".html");
  }
  const saveMd = (title) => {
    let val = editor.getContent();
    let content = html2md(val);
    var blob = new Blob([content], {
      type: "text/plain;charset=utf-8"
    });
    //console.log(title)
    saveAs(blob, title + ".md");
  }
  let saveTo = function (type) {
    //let val = editor.content();
    let title = document.getElementById('title').value;
    if (!title || title == '') {
      layer.msg('请输入文档标题', {icon:2});
      title.focus();
      return;
    }
    if (type == 'docx') {
      saveDocx(title);
    }
    else if (type == 'pdf') {
      savePdf(title);
    }
    else if (type == 'txt') {
      saveText(title);
    }
    else if (type == 'html') {
      saveHtml(title);
    }
    else if (type == 'md') {
      saveMd(title);
    }
  };
  let svgStr = `<svg t="1640281851372" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4064" width="20" height="20"><path d="M128 64a64 64 0 0 0-64 64v640a64 64 0 0 0 64 64h640a64 64 0 0 0 64-64V128a64 64 0 0 0-64-64H128z m0-64h640a128 128 0 0 1 128 128v640a128 128 0 0 1-128 128H128a128 128 0 0 1-128-128V128a128 128 0 0 1 128-128z" fill="#333333" p-id="4065"></path><path d="M256 64v128a64 64 0 0 0 64 64h256a64 64 0 0 0 64-64V64H256zM192 0h512v192a128 128 0 0 1-128 128H320a128 128 0 0 1-128-128V0z" fill="#333333" p-id="4066"></path><path d="M512 128a32 32 0 0 1 64 0v64a32 32 0 0 1-64 0V128zM128 876.032h64v48.384c0 15.616 25.6 35.584 64 35.584h640c38.4 0 64-19.968 64-35.584V227.584C960 211.968 934.4 192 896 192h-61.824V128H896c70.72 0 128 44.544 128 99.584v696.832c0 55.04-57.28 99.584-128 99.584H256c-70.72 0-128-44.544-128-99.584v-48.384z m0 0h64v48.384c0 15.616 25.6 35.584 64 35.584h640c38.4 0 64-19.968 64-35.584V227.584C960 211.968 934.4 192 896 192h-61.824V128H896c70.72 0 128 44.544 128 99.584v696.832c0 55.04-57.28 99.584-128 99.584H256c-70.72 0-128-44.544-128-99.584v-48.384z" fill="#333333" p-id="4067"></path></svg>`;
  
  editor.ui.registry.getAll().icons.saveFile || editor.ui.registry.addIcon('saveFile', svgStr);

  editor.ui.registry.addNestedMenuItem('saveFile', {
    icon: 'saveFile',
    text: '另存为',
    getSubmenuItems: function () {
      return [
        {
          text:'word文件',
          type: 'menuitem',
          onAction:function(){
            //console.log('Word文件');
            saveTo('docx')
          }
        },
        {
          text:'pdf文件',
          type: 'menuitem',
          onAction:function(){
            console.log('PDF文件');
            saveTo('pdf')
          }
        },
        {
          text:'md文件',
          type: 'menuitem',
          onAction:function(){
            console.log('md文件');
            saveTo('md')
          }
        },
        {
          text:'text文件',
          type: 'menuitem',
          onAction:function(){
            //console.log('text文件');
            saveTo('txt')
          }
        },
        /*{
          text:'rtf文件',
          type: 'menuitem',
          onAction:function(){
            //console.log('RTF文件');
            saveTo('rtf')
          }
        },*/
        {
          text:'html文件',
          type: 'menuitem',
          onAction:function(){
            //console.log('html文件');
            saveTo('html')
          }
        },
      ]
    }
  });
  return {
    getMetadata: function () {
      return {
        name: pluginName,
        url: "https://godo.im",
      };
    }
  };
});
